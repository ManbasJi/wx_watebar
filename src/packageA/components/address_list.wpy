<template>
  <view class="address">
    <repeat for="{{addressList}}" key="index" index="index" item="item">
      <view class="list_box">
        <swipeDelete :swipeData="item" @delItem.user="handleDelItem">
          <view class="address_list" @tap="tapSelAddress" data-id="{{item.fId}}">
            <view class="title">
              <view class="user_info textsize2">
                <text class="name">{{item.fName}}</text>
                <text class="phone">{{item.fPhone}}</text>
              </view>
              <view class="active_address text_overflow textsize2">
                <text class="defult" wx:if="{{item.isDefault==1}}"> [默认]</text>
                {{item.fProvinceId}} {{item.fCityId}} {{item.fAreaId}} {{item.fAddress}}
              </view>
            </view>
            <view class="arrow"  @tap.stop="edit" data-id="{{item.id}}" data-index="{{index}}"><i class="iconfont icon-edit" ></i></view>
          </view>
        </swipeDelete>
      </view>
    </repeat>
  </view>
  <view class="add_wrap">
    <view class="button type_theme_color" @tap="add">新增地址</view>
  </view>
</template>
<script>
import wepy from 'wepy'
import SwipeDelete from './common/wepy-swipe-delete'
import tip from '@/utils/tip'
import api from "@/api/api";
import {
  USER_SPECICAL_INFO,
  ADDRESS_ID,
  TOKEN
} from '@/utils/constant';
export default class AddressList extends wepy.component {
  props = {
    addressList: {
      default: [{
        style: 0
      }, {
        style: 0
      }],
      type: Object
    }
  }
  components = {
    swipeDelete: SwipeDelete
  }

  data = {
    receiverInfo:{},
    type: ""
  }

  async delUserAddress(id) {
    let that = this;
    let token = wepy.getStorageSync(TOKEN) || {};
    const json = await api.deleteAddress({
      query: {
        fId: id,
        token:token
      },
      method:'POST'
    });
    console.log("delUser===",json);

    if (json.data.code == 0) {
      console.log("删除成功");
      this.$emit('currentPage', 0);
      this.$emit('refreshAddList', 'hehe');
    } else {
      tip.error(json.data.msg)
    }
    that.showLoading = false;
  }
  methods = {
    add() {
      //0 列表 1新增 2编辑
      this.$emit('currentPage', 1);
    },
    edit(e) {
      var id = e.currentTarget.dataset.id;
      let index = e.currentTarget.dataset.index;
      console.log("id=====");
      console.log(id);
      //0 列表 1新增 2编辑
      this.$emit('currentPage', 2,id,index);
    },
    //左滑删除
    handleDelItem(itemData) {
      this.delUserAddress(itemData.fId);
      console.log("左滑删除")
      console.log(itemData)
    },

    refreshList(val){
      if (val==undefined) return;
      console.log("val.....",val);
      this.addressList = val;
      this.$apply();
    },

    setOrgType (type) {
      this.type=type;
    },

    tapSelAddress(e) {
      console.log("地址列表选中跳转");
      if (this.type!="order") {
        console.log("类型不等于'order'");
        return;
      }
      var id = e.currentTarget.dataset.id;
      console.log("id=="+id);
      wepy.setStorageSync(ADDRESS_ID,id);
      // wepy.redirectTo({
      //   url: "/pages/commitOrder?from=selAdd"
      // })
      wx.navigateBack({
        delta: 1
      })
    }
  }

  onLoad() {
    console.log("===address_list====",this.addressList)
  }
}

</script>
<style lang="less">
.list_box {
  height: 150rpx;
}

.address {
  .list_box:last-child {
    border-bottom: 1px solid #efefef;
  }
  .address_list {
    display: flex;
    justify-content: space-between;
    height: 150rpx;
    align-items: center;
    padding: 0rpx 0px 0px 35rpx;
    border-top: 1px solid #efefef;
    .title {
      color: #000;
    }
    .arrow {
      float:right;
      height: 50rpx;
      width: 50rpx;
      text-align: center;
      color: #9a9a9a;
    }
    .user_info {
      color: #333333;
      .name{
        margin-right:20rpx;
      }
    }
    .active_address {
      margin-top: 20rpx;
      width:600rpx;

    }
    .defult {
      color: #ea4a3a;
    }
  }
}

.add_wrap {
  display: block;
  width: 95%;
  left: 0;
  right: 0;
  position: absolute;
  bottom: 20rpx;
  margin: 0 auto;
}

</style>
